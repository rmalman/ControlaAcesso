@model ControlaAcesso.Models.Visita


@if (Request.QueryString["EfetuaBaixa"] == null)
{
    ViewBag.Title = "Editar";
    <h2>Editar</h2>
}
else
{
    ViewBag.Title = "Baixar Crachá";
    <h2>Baixar Crachá</h2>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Visita</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.VisitaID)

        <div class="form-group">
            @Html.LabelFor(model => model.RegistroEntrada, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Request.QueryString["EfetuaBaixa"] == null)
                {
                    @Html.EditorFor(model => model.RegistroEntrada, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RegistroEntrada, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.RegistroEntrada, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @*@Html.HiddenFor(model => model.RegistroEntrada, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.RegistroEntrada, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegistroSaida, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Request.QueryString["EfetuaBaixa"] == null)
                {
                    @Html.EditorFor(model => model.RegistroSaida, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.RegistroSaida, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.RegistroSaida, new { htmlAttributes = new { @class = "form-control", @Value = @DateTime.Now.ToString() } })
                    @Html.ValidationMessageFor(model => model.RegistroSaida, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CodigoCracha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodigoCracha, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodigoCracha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Empresa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Request.QueryString["EfetuaBaixa"] == null)
                {
                    @Html.EditorFor(model => model.Empresa, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Empresa, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.Empresa, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @*@Html.HiddenFor(model => model.Empresa, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Empresa, "", new { @class = "text-danger" })
                }
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Assunto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Request.QueryString["EfetuaBaixa"] == null)
                {
                    @Html.EditorFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Assunto, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.EditorFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control", @readonly = true } })
                    @*@Html.HiddenFor(model => model.Assunto, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Assunto, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Visitante", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @if (Request.QueryString["EfetuaBaixa"] == null)
                {
                    @Html.DropDownList("VisitanteID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VisitanteID, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownList("VisitanteID", null, htmlAttributes: new { @class = "form-control", @disabled = true })
                    @Html.HiddenFor(model => model.VisitanteID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.VisitanteID, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Salvar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (Request.QueryString["EfetuaBaixa"] == null)
    {
        @Html.ActionLink("Voltar a lista", "Index")
    }
    else
    {
        @Html.ActionLink("Voltar a lista", "../Visita/Index", new { CrachaAberto = 1 })
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
